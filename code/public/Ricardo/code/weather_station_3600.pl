# Category = Weather

#@ This module read data from file 'currdata.lst' generated by
#@ program HeavyWeather running on a Windows system
#@
#@ file is accessed mounting the "HeavyWeather" directory from
#@ Windows using Samba.
#@

my $wind_dir_lt;

my @wind_speed;    # array to store wind gust to calculate average wind

my $f_weather_station =
  defined $config_parms{WS3600_data}
  ? $config_parms{WS3600_data}
  : "C:/Program Files/HeavyWeather/currdat.lst";

# The obligatory voice command.
$v_weather_cond = new Voice_Cmd('Que tiempo hace');
$v_weather_cond->set_info("Lecturas de la estación metereológica");
$v_weather_cond->set_authority('anyone');

speak &format_ws_data if said $v_weather_cond;

#process item to restart weather station program
# this is done because sometimes HeavyWeather 1.1 stops
# to capture Weather Station data.
# Only solution find has been stop and start again
# HeavyWeather.exe program
$p_restart_heavyweather = new Process_Item;

my ( $last_timeobserved, $count );
my $hwr_bat = "C:/progra~1/HeavyWeather/HWR.bat";

# Read weather station data
#
if ( $New_Minute and -r $f_weather_station ) {
    my $section = "";

    my $text = file_read $f_weather_station;

    #print "File: $f_weather_station\n";
    #print "Weather: text ---------->>>>\n$text\n";

    foreach ( split /\n/, $text ) {

        #look for weather sectons
        if (/^\[(.*)\]/) {
            $section = $1;

            #    print "Weather Section: $section\n";
            next;
        }

        if ( $section eq 'time' ) {
            if (/^last\_actualisation=\"(\d+)\"/) {
                $Weather{TimeObserved} = $1;
                if ( $config_parms{CheckHeavyWeather} ) {

                    # check if HeavyWeather program is running without hang
                    # (only in the Windows server runninning HeavyWeather)
                    if ( $last_timeobserved eq $Weather{TimeObserved} ) {
                        if ( $count >= 3 ) {
                            set $p_restart_heavyweather $hwr_bat;
                            start $p_restart_heavyweather;
                            $count = 0;
                        }
                        else {
                            $count++;
                        }
                    }
                    else {
                        $last_timeobserved = $Weather{TimeObserved};
                        $count             = 0;
                    }
                }

            }
        }
        if ( $section eq 'weather_picture' ) {
            if (/^number=(\d+)/) {
                $Weather{Tendency} = ""        if $1 == -1;
                $Weather{Tendency} = "lluvia"  if $1 == 0;
                $Weather{Tendency} = "nuboso"  if $1 == 1;
                $Weather{Tendency} = "soleado" if $1 == 2;

                #	    print "Weather/tendency: $Weather{Tendency}\n";
            }
        }
        if ( $section eq 'weather_tendency' ) {
            if (/^number=(\d+)/) {
                $Weather{BaromTendency} = ""         if $1 == -1;
                $Weather{BaromTendency} = "estable"  if $1 == 0;
                $Weather{BaromTendency} = "subiendo" if $1 == 1;
                $Weather{BaromTendency} = "bajando"  if $1 == 2;

                #	    print "Weather/BaromTendency: $Weather{BaromTendency}\n";
            }
        }
        if ( $section eq 'storm_alarm' ) {
            if (/^number=(\d+)/) {
                $Weather{StormAlarm} = $1;

                #	    print "Weather/StormAlarm: $Weather{StormAlarm}\n";
            }
        }
        if ( $section eq 'indoor_temperature' ) {
            if (/^deg_C=\"(\-*[\d\.]+)\"/) {
                $Weather{TempIndoor} = $1;

                #	    print "Weather/TempIndoor: $Weather{TempIndoor}\n";
            }
        }
        if ( $section eq 'outdoor_temperature' ) {
            if (/^deg_C=\"(\-*[\d\.]+)\"/) {
                $Weather{TempOutdoor} = $1;

                #	    print "Weather/TempOutdoor: $Weather{TempOutdoor}\n";
            }
        }
        if ( $section eq 'indoor_humidity' ) {
            if (/^percent=\"(\d+)\"/) {
                $Weather{HumidIndoor} = $1;

                #	    print "Weather/HumidIndoor: $Weather{HumidIndoor}\n";
            }
        }
        if ( $section eq 'outdoor_humidity' ) {
            if (/^percent=\"(\d+)\"/) {
                $Weather{HumidOutdoor} = $1;

                #	    print "Weather/HumidOutdoor: $Weather{HumidOutdoor}\n";
            }
        }
        if ( $section eq 'dewpoint' ) {
            if (/^deg_C=\"(\-*[\d\.]+)\"/) {
                $Weather{DewOutdoor} = $1;

                #	    print "Weather/DewOutdoor: $Weather{DewOutdoor}\n";
            }
        }
        if ( $section eq 'windchill' ) {
            if (/^deg_C=\"(\-*[\d\.]+)\"/) {
                $Weather{WindChill} = $1;

                #	    print "Weather/WindChill: $Weather{WindChill}\n";
            }
        }
        if ( $section eq 'wind_speed' ) {
            if (/^kmh=\"([\d\.]+)\"/) {
                $Weather{WindGustSpeed} = $1;
                push( @wind_speed, $Weather{WindGustSpeed} );
                shift @wind_speed if ( $#wind_speed > 9 );  #limit to 10 samples
                my ( $wind, $wind_tot, $wind_count );
                $wind_count = $#wind_speed + 1;
                $wind_tot   = 0;
                foreach $wind (@wind_speed) {
                    $wind_tot += $wind;
                }
                $Weather{WindAvgSpeed} = $wind_tot / $wind_count;

                #	    print "Weather/WindGustSpeed: $Weather{WindGustSpeed}\n";
                #	    print "Weather/WindAvgSpeed: $Weather{WindAvgSpeed}\n";
            }
        }
        if ( $section eq 'wind_direction' ) {
            if (/^deg=\"(\d+)\"/) {
                $Weather{WindGustDir} = $1;

                #	    print "Weather/WindGustDir: $Weather{WindGustDir}\n";
            }
            if (/^name=\"(.+)\"/) {
                $wind_dir_lt = $1;
                $wind_dir_lt =~ s/W/O/gi;
            }
        }
        if ( $section eq 'rain_24h' ) {
            if (/^mm=\"([\d\.]+)\"/) {
                $Weather{RainTotal} = $1;

                #	    print "Weather/RainTotal: $Weather{RainTotal}\n";
            }
        }
        if ( $section eq 'rain_1h' ) {
            if (/^mm=\"([\d\.]+)\"/) {
                $Weather{RainRate} = $1;

                #	    print "Weather/RainRate: $Weather{RainRate}\n";
            }
        }
        if ( $section eq 'pressure_absolute' ) {
            if (/^hpa=\"([\d\.]+)\"/) {
                $Weather{BaromAbs} = $1;

                #	    print "Weather/BaromAbs: $Weather{BaromAbs}\n";
            }
        }
        if ( $section eq 'pressure_relative' ) {
            if (/^hpa=\"([\d\.]+)\"/) {
                $Weather{BaromRel} = $1;
                $Weather{Barom}    = $1;
                $Weather{BaromSea} = $1;

                #	    print "Weather/BaromRel: $Weather{BaromRel}\n";
            }
        }
    }
    $Weather{Summary_Short} = sprintf(
        "%2d/%2d/%2d %3d%% %3d%%",
        $Weather{TempIndoor},  $Weather{TempOutdoor}, $Weather{WindChill},
        $Weather{HumidIndoor}, $Weather{HumidOutdoor}
    );
    $Weather{Summary} = sprintf(
        "In/out/chill: %4.1f/%2d/%2d Humid:%3d%% %3d%%",
        $Weather{TempIndoor},  $Weather{TempOutdoor}, $Weather{WindChill},
        $Weather{HumidIndoor}, $Weather{HumidOutdoor}
    );
}
$Weather{Wind} =
    $wind_dir_lt . " "
  . $Weather{WindAvgSpeed} . "/"
  . $Weather{WindGustSpeed} . " km/h";

# This subroutine formats a speakable (well, mostly) summary of the current
# weather conditions and short term forecast.
sub format_ws_data {
    my $data;

    $temp = $Weather{TempIndoor};
    $data =
      "La temperatura interior es de " . sprintf( "%d", $temp ) . " grados";
    $temp = $Weather{TempOutdoor};
    $data .= ",y hay " . sprintf( "%d", $temp ) . " grados en el exterior";
    $data .= ", con sensación térmica de " . $Weather{WindChill} . " grados"
      if ( $Weather{WindChill} );
    $data .= ". ";

    if ( $Weather{TempOutdoor} > -10 ) {
        $data .=
            "La humedad es del "
          . $Weather{HumidOutdoor}
          . " %, y un punto de condensación de "
          . $Weather{DewOutdoor}
          . " grados. ";
    }

    if ( $Weather{WindGustSpeed} ) {
        $data .=
            "Viento del "
          . convert_direction( $Weather{WindGustDir} ) . " a "
          . $Weather{WindGustSpeed}
          . " kilometros por hora";
        $data .= ". ";
    }
    else {
        $data .= "Viento en calma. ";
    }

    $data .= "Presión atmostférica de $Weather{Barom} milibares, ";
    if ( $Weather{BaromTendency} ) {
        $data .= "y $Weather{BaromTendency}. ";
    }

    if ( $Weather{RainTotal} > 0.0 ) {
        $data .=
          "Han caido $Weather{RainTotal} litros por metro cuadrado en las últimas 24 horas. ";
    }

    return $data;
}

